library*inlabru
library(INLA)
library(scales)
library(raster)
library(tidyverse)
library(gridExtra)

dims = 101
mat = matrix(1,ncol=dims,nrow=dims)


##########################
##### sptial field #####
######################
yticks <- xticks <-seq(-3, 3, length=dims)
side <- diff(yticks[1:2])  # side length of squares
sigma <- diag(2)               # standard devs. for f2
mu <- c(0,0)                # means

## Using pnorm
f <- Vectorize(function(x, y, side, mu1, mu2, s1, s2)
  diff(pnorm(x+c(-1,1)*side/2, mu1, s1)) * diff(pnorm(y+c(-1,1)*side/2, mu2, s2)),
  vec=c("x", "y"))

## get prob. of squares, mu are means, s are standards devs.
mat <- outer(xticks, yticks, f, side=side, mu1=0, mu2=0, s1=1,s2=1)
mat =  rescale(mat,to=c(-1,1))
space <-raster(
  mat,
  xmn=1, xmx=dims,
  ymn=1, ymx=dims
)

plot(space)
space_effect = space@data@values

lon=coordinates(space)[,1]
lat=coordinates(space)[,2]

###############################
### Covariate ######
min_covar=0;max_covar=30
covar_profile = round(rescale(lon^2.5,to=c(min_covar,max_covar)) )+1## same in Y axis
effect_covar =  dnorm(covar_profile,10,4)
effect_covar <- rescale(effect_covar,to=c(-1.5,1.5))
plot(covar_profile,effect_covar)



#########################
##### create dataset ####
##########################


scale2 = .5
scale3 = .8
n = dims^2

#### biomass data
intercept1 = -1
effort1 = sample(1:5, n, replace=TRUE)
nu1 = intercept1 +  
  effect_covar + space_effect
mu1 = exp(nu1+log(effort1))

prec.scale = .5
prec.par = 4
a = prec.par * prec.scale
b = mu1 / (prec.par * prec.scale)
y1 = rgamma(n, shape = a, scale = b)
hist(y1)

### count
intercept2 = 2
effort2 = sample(1:2, n, replace=TRUE)
nu2 = scale2*(intercept2 +  
                effect_covar + space_effect ) 
mu2 = exp(nu2+log(effort2))
y2 = rpois(n, lambda = mu2)


### occurrence
intercept3 = -.5
logit = function(x) log(x/(1-x))
inv.logit = function(x) exp(x)/(1+exp(x))
effort3 = sample(1:2, n, replace=TRUE)
nu3 = scale3*(intercept3 +  
                effect_covar + space_effect + effort3) ### I dont know how to enter effort in a logit
mu3 = inv.logit(nu3)
y3 = rbinom(n, size = 1, prob = mu3)

par(mfrow=c(3,1))
hist(mu1)
hist(mu2)
hist(mu3)
par(mfrow=c(1,1))



all_data = data.frame(mean_biomass=mu1,
                      mean_count=mu2,
                      mean_occur=mu3,
                      obs_biomass=y1,obs_count=y2,obs_occur=y3,
                      covar=round(inla.group(covar_profile,n=15)),
                      covar_effect= effect_covar ,
                      lon=lon,
                      lat=lat,
                      space=space_effect
                      #y=d1$y
)

ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=covar))
ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=covar_effect))
ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=space))

aa = ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=log(mean_biomass)))
bb = ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=log(mean_count)))
cc = ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=mean_occur))
grid.arrange(aa,bb,cc,ncol=3)

##############################
#### create partial surveys ####
##############################
lower_bound=8
upper_bound=12
n=200
survey1_idx = survey2_idx = survey3_idx = c()
for(i in 1:n){
  a.idx=5
  b.idx=15
  while(a.idx<lower_bound){
    ea1 = sample(1:nrow(all_data),1)
    a.idx=all_data$covar[ea1]
  }
  while( b.idx>upper_bound){
    ea2 = sample(1:nrow(all_data),1)
    b.idx=all_data$covar[ea2]
  }
  
  survey1_idx[i]=ea1
  survey2_idx[i]=ea2
}

survey3_idx = sample(1:nrow(all_data),n)

pred_surv1 = all_data[which(all_data$covar>lower_bound),]
pred_surv2 = all_data[which(all_data$covar<upper_bound),]
pred_surv3 = all_data

survey1 = all_data[survey1_idx,]
survey2 = all_data[survey2_idx,]
survey3 = all_data[survey3_idx,]


bbbb = ggplot() + geom_raster(data=all_data,aes(x=lon,y=lat,fill=covar)) + #scale_fill_distiller(palette = "Spectral", direction = -1) +
  geom_point(data=survey1,aes(x=lon,y=lat),color="green",size=1.5) +
  geom_point(data=survey2,aes(x=lon,y=lat),color="yellow",size=1.5)+
  geom_point(data=survey3,aes(x=lon,y=lat),color="red",size=1.5)+
  theme_bw()+ggtitle("Covariate field") + ylab("Latitude")+ xlab("Longitude")

bbbb

ssss = ggplot() + geom_raster(data=all_data,aes(x=lon,y=lat,fill=space)) + #scale_fill_distiller(palette = "Spectral", direction = -1) +
  geom_point(data=survey1,aes(x=lon,y=lat),color="green",size=1.5) +
  geom_point(data=survey2,aes(x=lon,y=lat),color="yellow",size=1.5)+
  geom_point(data=survey3,aes(x=lon,y=lat),color="red",size=1.5)+
  theme_bw()+ggtitle("Unidentified spatial field") + ylab("Latitude")+ xlab("Longitude")

ssss

png(filename = "C:/Users/ip30/Dropbox (Personal)/Marie Curie/projects/MC objectives/1st_dep_indep/Simplified model/img/niche_survey_plot.png",
    width = 700,height = 300)
bbbb + ssss
dev.off()



mmmm = ggplot() + geom_raster(data=all_data,aes(x=lon,y=lat,fill=log(mean_biomass)))+# + scale_fill_distiller(palette = "heat.colors", direction = -1) +
  geom_point(data=survey1,aes(x=lon,y=lat),color="green",size=4) +
  geom_point(data=survey2,aes(x=lon,y=lat),color="red",size=4)+
  geom_point(data=survey3,aes(x=lon,y=lat),color="black",size=4)
mmmm
#grid.arrange(bbbb,mmmm,ncol=2)


######################
##### modelling ####
##################

d1=cbind(survey1$lon,survey1$lat)
d2=cbind(survey2$lon,survey2$lat)
d3=cbind(survey3$lon,survey3$lat)

#### mesh
max.edge = dims*.05
bound.outer = .3
mesh = inla.mesh.2d(loc.domain = cbind(c(0,dims,dims,0,0),c(0,0,dims,dims,0)),
                    #loc=cbind(sample_data$km_utm.x, sample_data$km_utm.y),
                    max.edge = c(1,5)*max.edge,
                    cutoff = .5,
                    offset = c(max.edge, -bound.outer))


####### spatial field structure
spde  = inla.spde2.pcmatern(mesh, prior.range = c(2,.5), prior.sigma = c(1,.01))

A1 <- inla.spde.make.A(mesh, loc=d1)
A2 <- inla.spde.make.A(mesh, loc=d2)
A3 <- inla.spde.make.A(mesh, loc=d3)


#########################
###### DATA prep ######
#####################

######################
### biomass data ###
###################
A.survey1 <- inla.spde.make.A(mesh, loc=cbind(survey1$lon,survey1$lat))
stack_survey1_alone<-inla.stack(data=list(y=survey1$obs_biomass),
                                A=list(A.survey1, 1),
                                effects=list(spat1=1:spde$n.spde,
                                             list(b0_1=1,
                                                  covar1=survey1$covar)),
                                tag='est_surv1')

### for integrated modelling ####
covar_notin_survey1 = which(!unique(all_data$covar)%in%survey1$covar)
covar_combined_survey1_NAs = unique(all_data$covar)[covar_notin_survey1]

survey1_NA = rep(NA,length(covar_notin_survey1))
A.survey1_NA <- inla.spde.make.A(mesh, loc=matrix(c(c(survey1$lon,survey1_NA),
                                                    c(survey1$lat,survey1_NA)),ncol=2))


stack_survey1<-inla.stack(data=list(y=cbind(c(survey1$obs_biomass,survey1_NA),NA,NA)),
                          A=list(A.survey1_NA, 1),
                          effects=list(spat1=1:spde$n.spde,
                                       list(b0_1=1,
                                            covar1=c(survey1$covar,covar_combined_survey1_NAs))),
                          tag='est_surv1')

#####################
### count data ####
#################
A.survey2 <- inla.spde.make.A(mesh, loc=cbind(survey2$lon,survey2$lat))

stack_survey2_alone<-inla.stack(data=list(y=survey2$obs_count),
                                A=list(A.survey2, 1),
                                effects=list(spat2=1:spde$n.spde,
                                             list(b0_2=1,
                                                  covar2=survey2$covar)),
                                tag='est_surv2')

### for integrated modelling ####
covar_notin_survey2 = which(!unique(all_data$covar)%in%survey2$covar)
covar_combined_survey2_NAs = unique(all_data$covar)[covar_notin_survey2]

survey2_NA = rep(NA,length(covar_notin_survey2))
A.survey2_NA <- inla.spde.make.A(mesh, loc=matrix(c(c(survey2$lon,survey2_NA),
                                                    c(survey2$lat,survey2_NA)),ncol=2))

stack_survey2<-inla.stack(data=list(y=cbind(NA,c(survey2$obs_count,survey2_NA),NA)),
                          A=list(A.survey2_NA, 1),
                          effects=list(spat2=1:spde$n.spde,
                                       list(b0_2=1,
                                            covar2=c(survey2$covar,covar_combined_survey2_NAs))),
                          tag='est_surv2')


#########################
### Occurrence data ###
######################
stack_survey3_alone<-inla.stack(data=list(y=survey3$obs_occur),
                                A=list(A3, 1),
                                effects=list(spat3=1:spde$n.spde,
                                             list(b0_3=1,
                                                  covar3=survey3$covar)),
                                tag='est_surv3')

stack_survey3<-inla.stack(data=list(y=cbind(NA,NA,survey3$obs_occur)),
                          A=list(A3, 1),
                          effects=list(spat3=1:spde$n.spde,
                                       list(b0_3=1,
                                            covar3=survey3$covar)),
                          tag='est_surv3')


stack_combined_survey = inla.stack(stack_survey1,stack_survey2,stack_survey3)




##################################
##### independent modelling ####
#############################

rw_prior = list(theta = list(prior="pc.prec", param=c(2,0.99),initial=9))

survey_biomass = inla(y ~  -1  +  b0_1 +
                        f(covar1,model="rw2",hyper = rw_prior) +
                        f(spat1,model=spde),
                      family=c("gamma"),control.inla = list(strategy = "simplified.laplace"),
                      data=inla.stack.data(stack_survey1_alone), control.compute=list(waic=T,cpo=F,config=F),
                      control.predictor=list(A=inla.stack.A(stack_survey1_alone), compute=F,link=1),
                      #control.fixed = list(expand.factor.strategy = "inla"),
                      verbose=F,num.threads = 2)

spat_potdata=data.frame(Lon = mesh$loc[,1],Lat=mesh$loc[,2],
                        Mean = survey_biomass$summary.random$spat1$mean)
biom_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean),size=4)+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("SDM biomass") + geom_point(data=survey1,aes(x=lon,y=lat),color="red",shape=3,alpha=1) + theme(legend.position = "none")

covar_plot_data = data.frame(Mean = survey_biomass$summary.random$covar1$mean,
                             Q_0.025 = survey_biomass$summary.random$covar1$`0.025quant`,
                             Q_0.975 = survey_biomass$summary.random$covar1$`0.975quant`,
                             covar = survey_biomass$summary.random$covar1$ID)
biom_covar = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean))+ 
  geom_line(aes(x=covar,y=Q_0.025),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975),linetype ="dashed")+theme_bw()+ggtitle("SDM biomass") +xlim(range(all_data$covar))+ ylab("Covariate effect")
#biom_covar

survey_count = inla(y ~  -1  +  b0_2 +
                      f(covar2,model="rw2",hyper = rw_prior) +
                      f(spat2,model=spde),
                    family=c("poisson"),control.inla = list(strategy = "simplified.laplace"),
                    data=inla.stack.data(stack_survey2_alone), control.compute=list(waic=T,cpo=F,config=F),
                    control.predictor=list(A=inla.stack.A(stack_survey2_alone), compute=F,link=1),
                    #control.fixed = list(expand.factor.strategy = "inla"),
                    verbose=F,num.threads = 2)

spat_potdata=data.frame(Lon = mesh$loc[,1],Lat=mesh$loc[,2],
                        Mean = survey_count$summary.random$spat2$mean)
count_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean),size=4)+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("SDM count") + geom_point(data=survey2,aes(x=lon,y=lat),color="red",shape=3,alpha=1) + theme(legend.position = "none")

covar_plot_data = data.frame(Mean = survey_count$summary.random$covar2$mean,
                             Q_0.025 = survey_count$summary.random$covar2$`0.025quant`,
                             Q_0.975 = survey_count$summary.random$covar2$`0.975quant`,
                             covar = survey_count$summary.random$covar2$ID)
count_covar = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean))+ 
  geom_line(aes(x=covar,y=Q_0.025),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975),linetype ="dashed")+theme_bw()+ggtitle("SDM count")+xlim(range(all_data$covar))+ ylab("Covariate effect")
#count_covar


survey_occurrence = inla(y ~  -1  +  b0_3 +
                           f(covar3,model="rw2",hyper = rw_prior) +
                           f(spat3,model=spde),
                         family=c("binomial"),control.inla = list(strategy = "simplified.laplace"),
                         data=inla.stack.data(stack_survey3_alone), control.compute=list(waic=T,cpo=F,config=F),
                         control.predictor=list(A=inla.stack.A(stack_survey3_alone), compute=F,link=1),
                         #control.fixed = list(expand.factor.strategy = "inla"),
                         verbose=F,num.threads = 2)

spat_potdata=data.frame(Lon = mesh$loc[,1],Lat=mesh$loc[,2],
                        Mean = survey_occurrence$summary.random$spat3$mean)
occur_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean),size=4)+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("SDM occurrence") + geom_point(data=survey3,aes(x=lon,y=lat),color="red",shape=3,alpha=1) + theme(legend.position = "none")

covar_plot_data = data.frame(Mean = survey_occurrence$summary.random$covar3$mean,
                             Q_0.025 = survey_occurrence$summary.random$covar3$`0.025quant`,
                             Q_0.975 = survey_occurrence$summary.random$covar3$`0.975quant`,
                             covar = survey_occurrence$summary.random$covar3$ID)
occur_covar = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean))+ 
  geom_line(aes(x=covar,y=Q_0.025),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975),linetype ="dashed")+theme_bw()+ggtitle("SDM occurrence")+xlim(range(all_data$covar))+ ylab("Covariate effect")
#occur_covar



###########################################
######### integrated modelling ########
####################################
survey_integrated = inla(y ~  -1  +  b0_2 +  b0_1 + b0_3 +
                           f(covar1,model="rw2",hyper = rw_prior) + 
                           f(covar2,copy = "covar1",fixed=F)+
                           f(covar3,copy = "covar1",fixed=F)+
                           f(spat1,model=spde) +
                           f(spat2,copy = "spat1",fixed=F) +
                           f(spat3,copy = "spat1",fixed=F),
                         family=c("gamma","poisson","binomial"),control.inla = list(strategy = "simplified.laplace"),
                         data=inla.stack.data(stack_combined_survey), control.compute=list(waic=T,cpo=F,config=F),
                         control.predictor=list(A=inla.stack.A(stack_combined_survey), compute=T,link=1),
                         #control.fixed = list(expand.factor.strategy = "inla"),
                         verbose=F,num.threads = 2)

spat_potdata=data.frame(Lon = mesh$loc[,1],Lat=mesh$loc[,2],
                        Mean_biom = survey_integrated$summary.random$spat1$mean,
                        Mean_count = survey_integrated$summary.random$spat2$mean,
                        Mean_occur = survey_integrated$summary.random$spat3$mean)
int_biom_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean_biom),size=4) + xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("Integrated biomass") + theme(legend.position = "none")+ theme(legend.position = "none")
int_count_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean_count),size=4)+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("Integrated count") + theme(legend.position = "none")+ theme(legend.position = "none")
int_occur_spat = ggplot(spat_potdata) + geom_point(aes(x=Lon,y=Lat,color=Mean_occur),size=4)+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("Integrated occurrence") + theme(legend.position = "none")+ theme(legend.position = "none")

covar_plot_data = data.frame(Mean_biom = survey_integrated$summary.random$covar1$mean,
                             Q_0.025_biom = survey_integrated$summary.random$covar1$`0.025quant`,
                             Q_0.975_biom = survey_integrated$summary.random$covar1$`0.975quant`,
                             Mean_count = survey_integrated$summary.random$covar2$mean,
                             Q_0.025_count = survey_integrated$summary.random$covar2$`0.025quant`,
                             Q_0.975_count = survey_integrated$summary.random$covar2$`0.975quant`,
                             Mean_occur = survey_integrated$summary.random$covar3$mean,
                             Q_0.025_occur = survey_integrated$summary.random$covar3$`0.025quant`,
                             Q_0.975_occur = survey_integrated$summary.random$covar3$`0.975quant`,
                             covar = survey_integrated$summary.random$covar3$ID)
biom_covar_int = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean_biom))+ 
  geom_line(aes(x=covar,y=Q_0.025_biom),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975_biom),linetype ="dashed")+theme_bw()+ggtitle("Integrated biomass")+xlim(range(all_data$covar))+ ylab("Covariate effect")
#biom_covar_int
count_covar_int = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean_count))+ 
  geom_line(aes(x=covar,y=Q_0.025_count),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975_count),linetype ="dashed")+theme_bw()+ggtitle("Integrated count")+xlim(range(all_data$covar))+ ylab("Covariate effect")
#count_covar_int
occur_covar_int = ggplot(covar_plot_data) + 
  geom_line(aes(x=covar,y=Mean_occur))+ 
  geom_line(aes(x=covar,y=Q_0.025_occur),linetype ="dashed")+ 
  geom_line(aes(x=covar,y=Q_0.975_occur),linetype ="dashed") +theme_bw()+ggtitle("Integrated occurrence")+
  xlim(range(all_data$covar)) + ylab("Covariate effect")
#occur_covar_int


#### real fields ###
real_spat_plot = ggplot(all_data) + geom_raster(aes(x=lon,y=lat,fill=space))+ xlim(0,dims)+ ylim(0,dims)+
  theme_bw()+ggtitle("Real spatial effect") + ylab("Lat") + xlab("Lon") + theme(legend.position = "none")

real_covar_data =data.frame(covar = covar_profile,Std_effect = effect_covar)
real_covar_plot = ggplot(real_covar_data) + ylab("Standardised eff")+
  geom_line(aes(x=covar,y=Std_effect))  +theme_bw()+ggtitle("Real covarmetric effect")+xlim(range(all_data$covar))


### covar plot
plot_spacer() + real_covar_plot + plot_spacer() + biom_covar + count_covar + occur_covar + biom_covar_int + count_covar_int + occur_covar_int


### spatial plot
plot_spacer() + real_spat_plot + plot_spacer() + biom_spat + count_spat + occur_spat + int_biom_spat + int_count_spat + int_occur_spat
